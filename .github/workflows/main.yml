# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          name: github.com/bluez/bluez.git
          ref: refs/heads/master

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Run a multi-line script
        run: |
          sudo apt-get upgrade
          sudo apt-get update
          sudo apt-get -y install bridge-utils autotools-dev automake libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev libreadline-dev libdbus-glib-1-dev libtool |
          wget http://www.kernel.org/pub/linux/bluetooth/bluez-5.50.tar.xz
          tar xf bluez-5.50.tar.xz
          cd bluez-5.50
          ls -al
          ./configure  --prefix=/usr --mandir=/usr/share/man --sysconfdir=/etc --localstatedir=/var --enable-experimental --with-systemdsystemunitdir=/lib/systemd/system --with-systemduserunitdir=/usr/lib/systemd --enable-deprecated --enable-testing --enable-tools |
          make
          sudo make install 
          mkdir -p /etc/bluetooth/
          sudo cp src/main.conf /etc/bluetooth/main.conf
          sudo cp src/bluetooth.conf /etc/dbus-1/system.d/bluetooth.conf
          sudo cp src/bluetooth.conf /usr/share/dbus-1/system.d/bluetooth.conf
          sudo src/bluetoothd --experimental --debug &
          sudo emulator/btvirt -l 2 &
